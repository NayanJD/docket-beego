apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.apiserver.name }}
  labels:
    app: {{ .Values.apiserver.name }}
  namespace: {{ default .Release.Namespace .Values.namespace }}
spec:
  replicas: {{ .Values.apiserver.replicas }}
  selector:
    matchLabels:
      app: {{ .Values.apiserver.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.apiserver.name }}
    spec:
      initContainers:
        - name: {{ .Values.apiserver.initContainer.name }}
          image: {{ .Values.apiserver.image }}
          imagePullPolicy: {{ .Values.apiserver.imagePullPolicy }}
          command: ["./startup.sh", "migrate"]
          envFrom:
            - configMapRef:
                name: {{ .Values.apiServerConfigMap.name }}
            - secretRef:
                name: {{ .Values.apiServerSecret.name }}
      containers:
        - name: cera-apiserver
          securityContext: 
            runAsUser: 1001
          image: {{ .Values.apiserver.image }}
          imagePullPolicy: {{ .Values.apiserver.imagePullPolicy }}
          ports:
            - containerPort: {{ .Values.apiserver.port }}
          envFrom:
            - configMapRef:
                name: {{ .Values.apiServerConfigMap.name }}
            - secretRef:
                name: {{ .Values.apiServerSecret.name }}
          readinessProbe:
            httpGet:
              path: /healthz
              port: {{ .Values.apiserver.port }}
            initialDelaySeconds: 30
            periodSeconds: 10
            failureThreshold: 6
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Values.apiserverService.name }}
spec:
  selector:
    app: {{ .Values.apiserver.name }}
  type: LoadBalancer
  ports:
    - protocol: TCP
      port: {{ .Values.apiserverService.port }}
      targetPort: {{ .Values.apiserver.port }}
      # nodePort: 30002